image: maven 

variables:
   MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
   MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
cache: 
  paths:
   - .m2/repository/
   - target/

stages:
   - codequality
   - build
   - test
   - package
   - publish
   - deploy

codequality:
 #tags:
 stage: codequality
 script:
    - mvn sonar:sonar

codebuild:
 #tags: 
  # - build
 stage: build 
 script:   
   - mvn compile 

codetest: 
 #tags: 
  # - build 
 stage: test 
 script: 
  # - mvn $MAVEN_CLI_OPTS test 
   - mvn test 
   - echo "The code has been tested" 

Codepackage: 
 #tags: 
  # - build 
 stage: package 
 script: 
   #- mvn $MAVEN_CLI_OPTS package -Dmaven.test.skip=true 
   - mvn package -Dmaven.test.skip=true 
   - echo "Packaging the code" 
 artifacts: 
  paths: 
      - target/*.war 
 only: 
   - master 

PublishNexus: 
 #tags: 
  # - build 
 stage: publish 
 script: 
  # - mvn $MAVEN_CLI_OPTS deploy -Dmaven.test.skip=true
   - mvn deploy -s .m2/setting.xml
#   - mvn deploy:deploy-file -DgroupId=com.efsavage -DartifactId=hello-world -Dversion=1.11 -Dpackaging=war -Dfile=target/hello-world-1.10.war -DgeneratePom=true -DrepositoryId=mydeployment -Durl=http://34.69.178.31:8081/repository/maven-releases
  # - curl -v -u admin:admin --upload-file target/hello-world-war-1.0.65.war  http://34.69.178.31:8081/repository/maven-releases/mya-app.war   
   #- mvn deploy -Dmaven.test.skip=true -X
   - echo "installing the package in local repository" 
 only: 
   - master
Deploy: 
 #tags: 
  # - build 
 stage: deploy 
 script: 
  deployTomcat
 stage: deploy
 variables:
   DeployPath: "/var/lib/tomcat8/webapps/"
 script:
   - cat /etc/os-release
   - whoami
   - apt update && apt install openssh-client ssh -y
   - eval $(ssh-agent -s)
   - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
   - mkdir -p ~/.ssh && chmod 777 ~/.ssh
   -  echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
   -  chmod 600 ~/.ssh/id_rsa && chmod 700 ~/.ssh
   - - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
   - touch test
   - scp -v -i ~/.ssh/id_rsa  test $TOMCAT_SERVER_USER@$TOMCAT_SERVER:/tmp/
  # - ssh-keyscan -t rsa -H $TOMCAT_SERVER >> ~/.ssh/known_hosts && chmod 777 ~/.ssh/*
  # - echo "PasswordAuthentication no" >> /etc/ssh/sshd_config
 #  - service ssh restart
   #- touch test
   #- ssh -o "StrictHostKeyChecking=no" -p22 $TOMCAT_USER@$TOMCAT_SERVER "mkdir -p /home/test_app/app/"
   - ls -ll ~/.ssh
   #- '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
   #- chown -R mahadevops_feb20 ~/.ssh/
  # - chgrp -R mahadevops_feb20 ~/.ssh/
   #- cat   ~/.ssh/known_hosts
  # - ssh -v $TOMCAT_SERVER_USER@$TOMCAT_SERVER
   #- scp test $TOMCAT_SERVER_USER@$TOMCAT_SERVER:/tmp/
   - cat /var/log/auth.log
 only: 
   - master 
